<?php

/**
 * 	Dear developer!
 *	Never modify events.php file, it is autogenerated.
 *  Modify PHP/EventTemplates/events.txt instead.
 *
 */

 class eventclass_pedigree  extends eventsBase
{
	function __construct()
	{
	// fill list of events
		$this->events["CustomAdd"]=true;


		$this->events["BeforeAdd"]=true;


		$this->events["BeforeShowList"]=true;


	}

//	handlers

		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Custom add
function CustomAdd(&$values, &$keys, &$error, $inline, $pageObject)
{

		

// Place event code here.
// Use "Add Action" button to add code snippets.




return true;
;		
} // function CustomAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before record added
function BeforeAdd(&$values, &$message, $inline, $pageObject)
{

		

$values['usuario'] = $_SESSION['idUsuario'];


// Função para obter um pombo pelo ID
function getPombo($id) {
    $consulta_pombo = DB::Query("SELECT * FROM pombo WHERE id = '{$id}'");
    return $consulta_pombo->fetchAssoc();
}

// Função recursiva para buscar todos os ancestrais de um pombo e retornar os IDs separados por vírgula
function getAncestraisIds($id, &$ids = []) {
    $pombo = getPombo($id);

    if (!$pombo) {
        return; // Se o pombo não for encontrado, retorna sem fazer nada
    }

    // Adiciona o ID do pombo atual à lista de IDs
    $ids[] = $pombo['id'];

    // Se o pombo não tiver pai e mãe, para a busca por ancestrais
    if (empty($pombo['pai']) && empty($pombo['mae'])) {
        return implode(',', $ids); // Retorna apenas o ID do pombo atual se não tiver pais
    }

    // Verifica se o pai existe e chama a função recursivamente
    if ($pombo['pai']) {
        getAncestraisIds($pombo['pai'], $ids);
    }

    // Verifica se a mãe existe e chama a função recursivamente
    if ($pombo['mae']) {
        getAncestraisIds($pombo['mae'], $ids);
    }

    // Retorna a lista de IDs como uma string separada por vírgula
    return implode(',', $ids);
}

// ID do pombo inicial (filho)
$id = $values['filhote']; // Exemplo: ID do pombo passado via URL

// Consulta todos os IDs dos ancestrais do pombo específico
$idsAncestrais = getAncestraisIds($id);

$quantidadeA = explode(',', $idsAncestrais);

if($quantidadeA > 1) {
	$values['parentes'] = $idsAncestrais;
	return true;
} else {
	$message = "Impossível gerar pedigree, sem parentes o suficiente!";
	return false;
}


;		
} // function BeforeAdd

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before display
function BeforeShowList(&$xt, &$templatefile, $pageObject)
{

		

// Place event code here.
// Use "Add Action" button to add code snippets.

setFieldLabel('pedigree', 'filhote', 'ANILHA');

;		
} // function BeforeShowList

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		



}
?>
